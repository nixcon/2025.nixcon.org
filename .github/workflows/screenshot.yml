name: Update Screenshot

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  screenshot:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.2.14

      - name: Install dependencies
        run: bun install

      - name: Build site
        run: bunx vinxi build

      - name: Install Playwright
        run: |
          bun add -D playwright
          bunx playwright install chromium

      - name: Start server and take screenshot
        run: |
          # Start the server in background
          bunx vinxi start --port 3000 &
          SERVER_PID=$!

          # Wait for server to be ready
          echo "Waiting for server to start..."
          timeout 60 bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'

          # Take screenshot using Playwright
          cat > screenshot.js << 'EOF'
          const { chromium } = require('playwright');

          (async () => {
            const browser = await chromium.launch();
            const page = await browser.newPage();
            
            // Set viewport to 1920x1080
            await page.setViewportSize({ width: 1920, height: 1080 });
            
            // Navigate to the page
            await page.goto('http://localhost:3000', { waitUntil: 'networkidle' });
            
            // Wait a bit more for any animations to complete
            await page.waitForTimeout(3000);
            
            // Take screenshot
            await page.screenshot({ 
              path: 'Screenshot.jpg', 
              type: 'jpeg',
              quality: 90,
              fullPage: false
            });
            
            await browser.close();
            console.log('Screenshot saved as Screenshot.jpg');
          })();
          EOF

          # Run the screenshot script
          node screenshot.js

          # Stop the server
          kill $SERVER_PID

      - name: Check if screenshot changed
        id: check_changes
        run: |
          if git diff --quiet Screenshot.jpg; then
            echo "changed=false" >> $GITHUB_OUTPUT
            echo "No changes detected in screenshot"
          else
            echo "changed=true" >> $GITHUB_OUTPUT
            echo "Screenshot has been updated"
          fi

      - name: Create Pull Request
        if: steps.check_changes.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: Update website screenshot
          title: "Update Screenshot.jpg"
          body: |
            This PR updates the website screenshot to reflect the current state of the site.

            Screenshot taken at 1920x1080 resolution.

            Auto-generated by GitHub Actions workflow.
          branch: update-screenshot
          delete-branch: true
          add-paths: |
            Screenshot.jpg

      - name: No changes detected
        if: steps.check_changes.outputs.changed == 'false'
        run: echo "Screenshot is already up to date. No PR created."
